<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise les sauvegardes

music_on = 0;
current_difficulty = 0; // 0 = tutorial, 4 = 4*4, 5 = 5*5

// Initialise les sauvegardes
ini_open("savedata.ini");
if (!ini_section_exists("player"))
{
    ini_write_real("player", "played_tutorial", 0); // Indique si le tutorial a été joué ou non
    ini_write_real("player", "music_on", 0); // Indique si la musique est active ou non
    ini_write_real("player", "current_level_4", 1); // Indique le niveau actuel en difficulté 4
    ini_write_real("player", "current_level_5", 1); // Indique le niveau actuel en difficulté 5
    ini_write_string("player", "save_grid_4", ""); // Le niveau actuellement joué en difficulté 4
    ini_write_string("player", "save_grid_5", ""); // Le niveau actuellement joué en difficulté 5
}
else 
{
    if (!ini_key_exists("player", "played_tutorial"))
        ini_write_real("player", "played_tutorial", 0);
    if (!ini_key_exists("player", "music_on"))
        ini_write_real("player", "music_on", 0);
    if (!ini_key_exists("player", "current_level_4"))
        ini_write_real("player", "current_level_4", 1);
    if (!ini_key_exists("player", "current_level_5"))
        ini_write_real("player", "current_level_5", 1);
    if (!ini_key_exists("player", "save_grid_4"))
        ini_write_string("player", "save_grid_4", "");
    if (!ini_key_exists("player", "save_grid_5"))
        ini_write_string("player", "save_grid_5", "");
}

// Active ou non la musique
music_on = ini_read_real("player", "music_on", 1);

if (!audio_is_playing(sou_doodle) &amp;&amp; music_on == 1)
    audio_play_sound(sou_doodle, 10, true);





</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise les paramètres de draw

display_reset(8, true);
var col = make_color_rgb(247, 234, 244);
draw_set_color(col);
draw_set_font(fon_baloo_bhaina);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise le ratio

large_button_width = sprite_get_width(spr_button_play);
large_button_height = sprite_get_height(spr_button_play);
small_button_width = sprite_get_width(spr_button_home);
small_button_height = sprite_get_height(spr_button_home);

large_button_stretch = (room_width*0.6666)/large_button_width;
small_button_stretch = (room_height*0.0833)/small_button_width;

gap_button = large_button_height*large_button_stretch*0.75;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
