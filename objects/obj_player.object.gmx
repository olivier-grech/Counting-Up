<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialisation des variables

//Movment variables
grav = 0;
movespeed = 9;
hsp = 0; //Horizontal speed
vsp = 0; //Vertical speed
nextmove = 'none';

//Touch controls 
mx = 0;
my = 0;
swipe_min = 25;

//Status
have_key = 0;
is_ghost = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouvement
if (hsp = 0 &amp;&amp; vsp = 0) { //Si on est à l'arrêt
    if (keyboard_check(vk_left) || nextmove == 'left') {
        hsp = -movespeed;
    } else if (keyboard_check(vk_right) || nextmove == 'right') {
        hsp = +movespeed;
    } else if (keyboard_check(vk_up) || nextmove == 'up') {
        vsp = -movespeed;
    } else if (keyboard_check(vk_down) || nextmove == 'down') {
        vsp = +movespeed;
    }
    nextmove = 'none';
}

//Détection et suppression des verrous
if (place_meeting(x+hsp, y, obj_lock) &amp;&amp; have_key) {
    with instance_place(x+hsp, y, obj_lock) {
        instance_destroy()
    }
    have_key--;
}

if (place_meeting(x, y+vsp, obj_lock) &amp;&amp; have_key) {
    with instance_place(x, y+vsp, obj_lock) {
        instance_destroy()
    }
    have_key--;
}



//Horizontal movment
if (scr_collision_check(x+hsp, y, is_ghost)) {
    while(!scr_collision_check(x+sign(hsp), y, is_ghost)) {
        x += sign(hsp);
    }
    hsp = 0;
} else {
    x += hsp;
}

//Vertical movment
if (scr_collision_check(x, y+vsp, is_ghost)) {
    while(!scr_collision_check(x, y+sign(vsp), is_ghost)) {
        y += sign(vsp);
    }
    vsp = 0;
} else {
    y += vsp;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changement de sprite
if (is_ghost)
    sprite_index = spr_player_ghost
else
    sprite_index = spr_player
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Contrôles tactiles
var tx = mouse_x - mx;
var ty = mouse_y - my;

if (abs(tx) &gt;= abs(ty)) {
    if abs(tx) &gt; swipe_min {
       if sign(tx) == -1 {
          nextmove = 'left';
       } else {
          nextmove = 'right';
       }
    }
} else if (abs(ty) &gt;= abs(tx)) {
    if abs(ty) &gt; swipe_min {
       if sign(tx) == -1 {
          nextmove = 'down';
       } else {
          nextmove = 'up';
       }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Contrôles tactiles
if mouse_check_button_pressed(mb_left) {
    mx = mouse_x;
    my = mouse_y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
